@model BusinessLogicLayer.Models.Student

@{
    ViewData["Title"] = "Index";
    var students = ViewBag.Students as IEnumerable<Student>;
    var subjects = ViewBag.Subjects as IEnumerable<Subject>;
}

<h2>Create Student</h2>
<hr />
<div class="row">
    <div class="col-md-4 m-auto">
        <form asp-action="Add">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <input asp-for="Id" value="0" class="form-control" hidden/>
            </div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Date" class="control-label"></label>
                <input asp-for="Date" class="form-control" />
                <span asp-validation-for="Date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Address" class="control-label"></label>
                <input asp-for="Address" class="form-control" />
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="SubjectsId" class="control-label"></label>
                @foreach (var subject in subjects)
                {
                    <input type="checkbox" name="SubjectsId" value="@subject.Id" /> @subject.Name
                }
            </div>
            <div class="form-group">
                <input type="submit" value="Add" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>



@* Display list of students *@
@* Check if the list is empty *@
@if (students.Count() == 0)
{
    <p>No student found</p>
}
else
{
    <table class="table table-hover table-bordered text-center border border-4 vertical-align: middle">
        <thead class="table-Info">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Date)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Address)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SubjectsId)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody class="table-group-divider">
            @foreach (var student in students)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => student.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => student.Date)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => student.Address)
                    </td>
                    <td>
                        @if(student.SubjectsId.Count() == 0)
                        {
                            <text>No subject</text>
                        }
                        else
                        {
                            @subjects.Where(s => student.SubjectsId.Contains(s.Id)).Select(s => s.Name).Aggregate((s1, s2) => s1 + " - " + s2)
                        }
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", "Student", new { id = student.Id }) -
                        @Html.ActionLink("Delete", "Delete", "Student", new { id = student.Id })
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@* scripts section *@
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}